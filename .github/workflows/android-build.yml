name: Build Tauri Android

on:
  schedule:
    - cron: '0 18 * * *' # 每天北京时间2点
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest # Android 构建通常在 Linux 环境下进行

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # 根据你的项目选择合适的 Node.js 版本
          cache: 'npm'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-linux-android # 为 Android ARM 64 位目标安装 Rust 工具链
          # 你可能还需要 x86_64-linux-android 如果需要模拟器支持

      - name: Cache Cargo dependencies
        uses: swatinem/rust-cache@v2

      - name: Install Tauri CLI globally
        run: npm install -g @tauri-apps/cli@latest

      - name: Setup project
        run: |
          cd silent-pen
          npm install
          npm install -D vite @vitejs/plugin-react

      # 设置 Android SDK 环境
      # 这是一个关键步骤，确保 Android 构建工具可用
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 33 # 根据你的项目需求指定 API Level
          build-tools: 33.0.0 # 根据你的项目需求指定 Build Tools 版本
          # 你可能还需要指定其他组件，例如 system-images 用于模拟器测试（如果需要的话）

      - name: Build Tauri Android app
        uses: tauri-apps/tauri-action@v0 # 使用 Tauri 官方提供的 GitHub Action
        with:
          working-directory: silent-pen
          args: '--target aarch64-linux-android' # 确保构建目标是 Android ARM 64 位

      - name: Upload Android artifact
        uses: actions/upload-artifact@v4
        with:
          name: tauri-android-build
          path: silent-pen/src-tauri/target/aarch64-linux-android/release/bundle/apk/*.apk # 或者 .aab 文件路径，根据你的构建输出
          # 如果你构建的是 AAB，路径可能是 src-tauri/target/aarch64-linux-android/release/bundle/release/*.aab