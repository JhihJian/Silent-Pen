name: Build Tauri Android

on:
  schedule:
    - cron: '0 18 * * *' # 每天北京时间2点
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest # Android 构建通常在 Linux 环境下进行

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: './silent-pen/package-lock.json'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-linux-android # 为 Android ARM 64 位目标安装 Rust 工具链
          # 你可能还需要 x86_64-linux-android 如果需要模拟器支持

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: "./silent-pen/src-tauri -> target"
          key: android-build

      - name: Install dependencies and Tauri CLI
        run: |
          cd silent-pen
          npm install
          npm install -D @tauri-apps/cli
          # 确认 tauri CLI 已安装
          npx tauri --version
          # 确保 node_modules/.bin 在 PATH 中
          echo "$(npm bin)" >> $GITHUB_PATH

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Android NDK
        run: |
          echo "安装 Android NDK..."
          yes | sdkmanager --licenses
          yes | sdkmanager --install "ndk;25.2.9519653" "cmake;3.22.1"
          echo "NDK_HOME=$ANDROID_SDK_ROOT/ndk/25.2.9519653" >> $GITHUB_ENV
          echo "ANDROID_NDK_HOME=$ANDROID_SDK_ROOT/ndk/25.2.9519653" >> $GITHUB_ENV

      - name: Verify NDK installation
        run: |
          echo "NDK_HOME: $NDK_HOME"
          echo "ANDROID_NDK_HOME: $ANDROID_NDK_HOME"
          ls -la $ANDROID_NDK_HOME || echo "NDK 目录不存在"

      - name: Initialize Android project structure
        run: |
          cd silent-pen
          # 使用 npx 执行 tauri 命令
          npx tauri android init

      - name: Setup Android Signing
        if: github.event_name == 'workflow_dispatch'
        run: |
          cd silent-pen/src-tauri/gen/android
          echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" > keystore.properties
          echo "password=${{ secrets.ANDROID_KEY_PASSWORD }}" >> keystore.properties
          echo "storeFile=$RUNNER_TEMP/keystore.jks" >> keystore.properties
          # 解码 base64 格式的 keystore 文件
          echo "${{ secrets.ANDROID_KEY_BASE64 }}" | base64 -d > $RUNNER_TEMP/keystore.jks
          # 确认文件已创建
          echo "已创建 keystore.properties 文件"
          ls -la
          echo "已解码 keystore 文件到 $RUNNER_TEMP/keystore.jks"
          ls -la $RUNNER_TEMP/keystore.jks || echo "Keystore 文件不存在"

      - name: Build Android APK (debug)
        run: |
          cd silent-pen
          # 使用 npx 执行 tauri 命令
          npx tauri android build --debug

      - name: Upload Android artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk-debug
          path: silent-pen/src-tauri/gen/android/app/build/outputs/apk/debug/*.apk
          retention-days: 7
          
      - name: Build Android APK (release)
        if: github.event_name == 'workflow_dispatch'
        run: |
          cd silent-pen
          # 使用 npx 执行 tauri 命令
          npx tauri android build
          
      - name: Upload Release APK
        if: github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v4
        with:
          name: android-apk-release
          path: silent-pen/src-tauri/gen/android/app/build/outputs/apk/release/*.apk
          retention-days: 30 